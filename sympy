#sympy
'''
内容：
Symbol 定义符号变量
abc 定义符号变量
expand 展开式
solve 解方程
limit 求极限
常用运算符

'''
from sympy import *

#常用运算符
+ - * /
指数：**
对数log（）
指数次幂exp（）

# Symbol
# 分开定义
x = Symbol('x')
y = Symbol('y')

#abc
#一起定义
from sympy.abc import x,y,z,a,b

# expand
z = expand(x*(x+y))
type(z)
>>> x**2 + x*y
sympy.core.add.Add

#solve(f,symbols,flags)
'''
参数：f 方程，不等式，bool式
      symbols 未知量
      flags 返回值形式

内容：方程要求右边为0，方程组用[]表示
      返回字典，若有多个解，则返回由解的元组组成的列表
      无值，返回空列表
      可以通过flags 强制返回形式
'''
solve(x < 3)
>>>(-oo < x) & (x < 3)
solve([y>0,y**2-1],y)
>>>Eq(y, 1) #不能达到想象中的舍去负的解，而是给一个值域
solve([x+y,2*x-3],[x,y])
>>>{x: 3/2, y: -3/2}
solve([x**2+y,y+1],[x,y])
>>>[(-1,-1),(1,-1)]
solve(x - 3, dict=True)
>>>[{x: 3}]
solve([x**2 - 3, y - 1], set=True)
>>>([x, y], {(-sqrt(3), 1), (sqrt(3), 1)})

#limit(方程，变量，趋于)
'''
无穷大用 oo 两个字母o表示
'''
limit(x+3*x,x,1)
>>> 4

